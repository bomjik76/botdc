import discord
from discord.ext import commands, tasks
from discord import FFmpegPCMAudio, ButtonStyle, PCMVolumeTransformer
import asyncio
import random
import datetime
from g4f.client import Client

intents = discord.Intents.default()
intents.message_content = True

bot = commands.Bot(command_prefix="!", intents=intents)

# –°–ø–∏—Å–æ–∫ –∑–≤—É–∫–æ–≤—ã—Ö —Ñ–∞–π–ª–æ–≤ –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
sound_files = ["puk.mp3"]

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ–º –∑–≤—É–∫–∞ –∏ —Ä–∞–¥–∏–æ
is_playing_puk = False
is_playing_shiza = False
voice_client = None
current_radio = None  # –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π —Ä–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏–∏
# –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
radio_message = None

#–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
ADMIN_USER_ID = 480402325786329091  # –ó–∞–º–µ–Ω–∏—Ç–µ 123456789 –Ω–∞ –≤–∞—à ID
VOICE_CHANNEL_ID = 1334607111694450708  # ID –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
TEXT_CHANNEL_ID = 1334606129015296010   # ID —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
# –ö–æ–º–∞–Ω–¥–∞ /radio
radio_urls = {
    '–≥–µ–ª–µ–Ω–¥–∂–∏–∫': 'https://serv39.vintera.tv/radio_gel/radio_stream/icecast.audio',
    '–∫–∞–≤–∫–∞–∑': 'http://radio.alania.net:8000/kvk',
    '–∞–Ω–∏–º–µ': 'https://pool.anison.fm:9000/AniSonFM(320)?nocache=0.9834540412142996',
    '—á–∏–ª': 'http://node-33.zeno.fm/0r0xa792kwzuv?rj-ttl=5&rj-tok=AAABfMtdjJ4AtC1pGWo1_ohFMw',
    'lofi': 'http://stream.zeno.fm/f3wvbbqmdg8uv',
    '–∫—É–±–∞–Ω—å': 'http://stream.pervoe.fm:8000',
    'jazz ': 'http://nashe1.hostingradio.ru/jazz-128.mp3'
}

# ID –∫–∞–Ω–∞–ª–∞ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏
CLEAR_CHANNEL_ID = 1329025201681334272

@tasks.loop(hours=24)  # –ó–∞–¥–∞—á–∞, –≤—ã–ø–æ–ª–Ω—è—é—â–∞—è—Å—è —Ä–∞–∑ –≤ 24 —á–∞—Å–∞
async def clear_channel_daily():
    channel = bot.get_channel(CLEAR_CHANNEL_ID)

    if channel:
        deleted = await channel.purge(limit=None)  # –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è

        print(f"–£–¥–∞–ª–µ–Ω–æ {len(deleted)} —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ –∫–∞–Ω–∞–ª–∞ {CLEAR_CHANNEL_ID}.")

@bot.event
async def on_ready():
    clear_channel_daily.start()  # –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–¥–∞—á—É –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –±–æ—Ç–∞

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –∑–≤—É–∫–∞
async def play_random_puk(voice_client):
    global is_playing_puk, current_radio
    while is_playing_puk:
        try:
            delay = random.randint(60, 120)
            await asyncio.sleep(delay)

            if not is_playing_puk:
                break

            # –°–æ—Ö—Ä–∞–Ω—è–µ–º URL —Ä–∞–¥–∏–æ
            radio_url = None
            if voice_client.is_playing():
                try:
                    args = voice_client.source._process.args
                    for arg in args:
                        if 'http' in str(arg):
                            radio_url = arg
                            break
                    voice_client.stop()
                    await asyncio.sleep(1)
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–∞–¥–∏–æ: {e}")

            # –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º 5 –ø—É–∫–æ–≤
            for _ in range(5):
                if not is_playing_puk or not voice_client.is_connected():
                    break

                try:
                    audio_source = discord.PCMVolumeTransformer(discord.FFmpegPCMAudio('/home/bot/puk.mp3'), volume=3.0)
                    voice_client.play(audio_source)
                    
                    # –ñ–¥–µ–º, –ø–æ–∫–∞ –∑–≤—É–∫ –Ω–µ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è
                    while voice_client.is_playing():
                        await asyncio.sleep(0.1)  # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–µ 100 –º—Å
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ –ø—É–∫–∞: {e}")

            # –î–æ–±–∞–≤–ª—è–µ–º –∑–∞–¥–µ—Ä–∂–∫—É –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ–º
            await asyncio.sleep(1)  # –ó–∞–¥–µ—Ä–∂–∫–∞ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º —Ü–∏–∫–ª–æ–º

            # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–∞–¥–∏–æ
            if radio_url:
                try:
                    await asyncio.sleep(1)
                    if voice_client.is_connected():
                        voice_client.play(discord.FFmpegPCMAudio(radio_url))
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ —Ä–∞–¥–∏–æ: {e}")

        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –≤ —Ü–∏–∫–ª–µ: {e}")
            await asyncio.sleep(1)

    print("–¶–∏–∫–ª –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –ø—É–∫–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω")

# –ö–æ–º–∞–Ω–¥–∞ /puk
class PukView(discord.ui.View):
    def __init__(self):
        super().__init__()
        self.puk_button = PukButton()
        self.add_item(self.puk_button)
        self.add_item(LeaveButtonPuk(self.puk_button))

class PukButton(discord.ui.Button):
    def __init__(self):
        super().__init__(label="üí® –ü—É–∫–∞—Ç—å", style=discord.ButtonStyle.primary)
        self.is_playing = False

    async def callback(self, interaction: discord.Interaction):
        global is_playing_puk, voice_client
        await interaction.response.defer(ephemeral=True)

        if not interaction.user.voice:
            await interaction.followup.send("–í—ã –¥–æ–ª–∂–Ω—ã –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!", ephemeral=True)
            return

        voice_client = interaction.guild.voice_client

        if voice_client is None or not voice_client.is_connected():
            try:
                voice_client = await interaction.user.voice.channel.connect()
            except Exception as e:
                await interaction.followup.send("–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∫–∞–Ω–∞–ª—É.", ephemeral=True)
                return
        elif voice_client.channel != interaction.user.voice.channel:
            await voice_client.move_to(interaction.user.voice.channel)

        is_playing_puk = True
        asyncio.create_task(play_random_puk(voice_client))

class LeaveButtonPuk(discord.ui.Button):
    def __init__(self, puk_button):
        super().__init__(label="–ü–µ—Ä–µ—Å—Ç–∞—Ç—å –ø—É–∫–∞—Ç—å", style=discord.ButtonStyle.danger)
        self.puk_button = puk_button

    async def callback(self, interaction: discord.Interaction):
        global is_playing_puk
        await interaction.response.defer(ephemeral=True)

        is_playing_puk = False

        message = await interaction.followup.send("–ü—É–∫–∏ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã.", ephemeral=True)
        await asyncio.sleep(5)  # –ñ–¥–µ–º 5 —Å–µ–∫—É–Ω–¥ –ø–µ—Ä–µ–¥ —É–¥–∞–ª–µ–Ω–∏–µ–º
        await message.delete()  # –£–¥–∞–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ

@bot.slash_command(name="puk", description="–ó–∞–ø—É—Å—Ç–∏—Ç—å —Å–ª—É—á–∞–π–Ω—ã–µ –ø—É–∫–∏ –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.")
async def puk(ctx):
    view = PukView()
    await ctx.respond("–°–ª—É—á–∞–π–Ω—ã–µ –ø—É–∫–∏:", view=view)

# –ö–æ–º–∞–Ω–¥–∞ /kick
class KickView(discord.ui.View):
    @discord.ui.button(label="–°–ª—É—á–∞–π–Ω–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ", style=discord.ButtonStyle.danger)
    async def random_kick(self, button: discord.ui.Button, interaction: discord.Interaction):
        if not interaction.user.voice:
            await interaction.response.send_message("–í—ã –¥–æ–ª–∂–Ω—ã –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
            return

        channel = interaction.user.voice.channel
        members = [member for member in channel.members if not member.bot]

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤ –∫–∞–Ω–∞–ª–µ —Ç–æ–ª—å–∫–æ 1 —É—á–∞—Å—Ç–Ω–∏–∫ (–≤–∫–ª—é—á–∞—è —Ç–æ–≥–æ, –∫—Ç–æ –Ω–∞–∂–∏–º–∞–µ—Ç –∫–Ω–æ–ø–∫—É)
        if len(members) > 1:
            member_to_kick = random.choice(members)
            await member_to_kick.move_to(None)
            await interaction.response.send_message(f"{member_to_kick.name} –±—ã–ª –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞.")
        else:
            await interaction.response.send_message("–í –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –º–∏–Ω–∏–º—É–º 2 —É—á–∞—Å—Ç–Ω–∏–∫–∞ –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è.", ephemeral=True)

@bot.slash_command(name="kick", description="–ò—Å–∫–ª—é—á–∏—Ç—å —Å–ª—É—á–∞–π–Ω–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –∏–∑ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞.")
async def kick(ctx):
    view = KickView()
    await ctx.respond("–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –∏—Å–∫–ª—é—á–∏—Ç—å —Å–ª—É—á–∞–π–Ω–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞:", view=view)


class RadioView(discord.ui.View):
    def __init__(self, radio_urls):
        super().__init__()
        self.radio_urls = radio_urls
        self.add_radio_buttons()

    def add_radio_buttons(self):
        for name in self.radio_urls:
            button = discord.ui.Button(label=name, style=discord.ButtonStyle.primary)
            button.callback = lambda i, n=name: self.play_radio(i, n)
            self.add_item(button)

        pause_resume_button = discord.ui.Button(label="–ü–∞—É–∑–∞/–í–æ–∑–æ–±–Ω–æ–≤–∏—Ç—å", style=discord.ButtonStyle.secondary)
        pause_resume_button.callback = self.pause_resume
        self.add_item(pause_resume_button)

        leave_channel_button = discord.ui.Button(label="–ü–æ–∫–∏–Ω—É—Ç—å –∫–∞–Ω–∞–ª", style=discord.ButtonStyle.red)
        leave_channel_button.callback = self.leave_channel
        self.add_item(leave_channel_button)

    async def play_radio(self, interaction: discord.Interaction, radio_name: str):
        global voice_client
        await interaction.response.defer()  # –û—Ç–ª–æ–∂–∏—Ç—å –æ—Ç–≤–µ—Ç
        if interaction.user.voice and interaction.user.voice.channel:
            channel = interaction.user.voice.channel
            if not voice_client or not voice_client.is_connected():
                voice_client = await channel.connect()
            
            source = discord.FFmpegPCMAudio(self.radio_urls[radio_name])
            if voice_client.is_playing():
                voice_client.stop()  # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–∏–π –ø–æ—Ç–æ–∫ –ø–µ—Ä–µ–¥ –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ–º
            voice_client.play(source)
            await interaction.response.send_message(content="–†–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏—è –ø–µ—Ä–µ–∫–ª—é—á–µ–Ω–∞.")  # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ
        else:
            await interaction.response.send_message("–í—ã –¥–æ–ª–∂–Ω—ã –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.")

    async def pause_resume(self, interaction: discord.Interaction):
        await interaction.response.defer()  # –û—Ç–ª–æ–∂–∏—Ç—å –æ—Ç–≤–µ—Ç
        if voice_client and voice_client.is_playing():
            voice_client.pause()
        elif voice_client and voice_client.is_paused():
            voice_client.resume()
        else:
            await interaction.followup.send("–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–∏—á–µ–≥–æ –Ω–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è.", ephemeral=True)

    async def leave_channel(self, interaction: discord.Interaction):
        if voice_client and voice_client.is_connected():
            await voice_client.disconnect()
        else:
            await interaction.response.send_message("–ë–æ—Ç –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É.")

async def update_radio_buttons(ctx):
    global radio_message
    while True:
        await asyncio.sleep(300)  # –û–±–Ω–æ–≤–ª—è–µ–º –∫–∞–∂–¥—ã–µ 5 –º–∏–Ω—É—Ç
        view = RadioView(radio_urls)
        if radio_message:
            await radio_message.edit(content="–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ —Ä–∞–¥–∏–æ:", view=view)
        else:
            radio_message = await ctx.send("–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–Ω–æ–ø–æ–∫ —Ä–∞–¥–∏–æ:", view=view)

@bot.slash_command(name="radio", description="–í—ã–±—Ä–∞—Ç—å —Ä–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏—é –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.")
async def radio(ctx):
    global radio_message
    view = RadioView(radio_urls)
    radio_message = await ctx.respond("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏—é:", view=view)
    bot.loop.create_task(update_radio_buttons(ctx))

@bot.slash_command(name="refresh_radio", description="–û–±–Ω–æ–≤–∏—Ç—å —Å–ø–∏—Å–æ–∫ —Ä–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏–π.")
async def refresh_radio(ctx):
    view = RadioView(radio_urls)
    await ctx.respond("–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏—é:", view=view)

@bot.slash_command(name="clear", description="–û—á–∏—Å—Ç–∏—Ç—å —á–∞—Ç –æ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –±–æ—Ç–∞ –∏ –∫–æ–º–∞–Ω–¥.")
async def clear(ctx):
    def is_bot_or_command_message(message):
        return message.author == bot.user or message.content.startswith('/')

    deleted = await ctx.channel.purge(limit=100, check=is_bot_or_command_message)
    await ctx.respond(f"–£–¥–∞–ª–µ–Ω–æ {len(deleted)} —Å–æ–æ–±—â–µ–Ω–∏–π.", ephemeral=True)

@bot.slash_command(name="clearall", description="–û—á–∏—Å—Ç–∏—Ç—å —á–∞—Ç –æ—Ç –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.")
async def clearall(ctx):
    if ctx.author.id != ADMIN_USER_ID:  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–∞–≤–∞
        await ctx.respond("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.", ephemeral=True)
        return

    deleted = await ctx.channel.purge(limit=None)  # –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    await ctx.respond(f"–£–¥–∞–ª–µ–Ω–æ {len(deleted)} —Å–æ–æ–±—â–µ–Ω–∏–π.", ephemeral=True)

class ShizaView(discord.ui.View):
    def __init__(self):
        super().__init__()
        self.add_item(ShizaButton("–õ–∏—Ç–≤–∏–Ω", "/home/bot/litvin.mp3"))
        self.add_item(ShizaButton("–°–∏–≥–º–∞", "/home/bot/sigma.mp3"))
        self.add_item(StopShizaButton())

class ShizaButton(discord.ui.Button):
    def __init__(self, label: str, file_path: str):
        super().__init__(label=label, style=discord.ButtonStyle.primary)
        self.file_path = file_path

    async def callback(self, interaction: discord.Interaction):
        global voice_client, is_playing_shiza
        await interaction.response.defer()

        if not interaction.user.voice:
            await interaction.followup.send("–í—ã –¥–æ–ª–∂–Ω—ã –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!", ephemeral=True)
            return

        voice_client = interaction.guild.voice_client

        if voice_client is None:
            voice_client = await interaction.user.voice.channel.connect()
        elif voice_client.channel != interaction.user.voice.channel:
            await voice_client.move_to(interaction.user.voice.channel)

        if voice_client.is_playing():
            voice_client.stop()

        is_playing_shiza = True
        asyncio.create_task(play_shiza_loop(voice_client, self.file_path))
        await interaction.followup.send(f"–ù–∞—á–∏–Ω–∞—é –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ {self.label}!", ephemeral=True)

class StopShizaButton(discord.ui.Button):
    def __init__(self):
        super().__init__(label="–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å", style=discord.ButtonStyle.danger)

    async def callback(self, interaction: discord.Interaction):
        global is_playing_shiza
        await interaction.response.defer()

        if voice_client and voice_client.is_playing():
            is_playing_shiza = False
            voice_client.stop()
            await interaction.followup.send("–í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!", ephemeral=True)
        else:
            await interaction.followup.send("–°–µ–π—á–∞—Å –Ω–∏—á–µ–≥–æ –Ω–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è!", ephemeral=True)

async def play_shiza_loop(voice_client, file_path):
    global is_playing_shiza
    while is_playing_shiza and voice_client and voice_client.is_connected():
        try:
            audio_source = discord.PCMVolumeTransformer(discord.FFmpegPCMAudio(file_path), volume=1.0)
            voice_client.play(audio_source)
            
            # –ñ–¥–µ–º, –ø–æ–∫–∞ —Ç–µ–∫—É—â–µ–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –Ω–µ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è
            while voice_client.is_playing():
                await asyncio.sleep(0.1)
                if not is_playing_shiza:
                    voice_client.stop()
                    return
                    
            # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ–º
            await asyncio.sleep(0.5)
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è: {e}")
            break

@bot.slash_command(name="shiza", description="–í–∫–ª—é—á–∏—Ç—å –∑–∞—Ü–∏–∫–ª–µ–Ω–Ω–æ–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –ø–µ—Å–µ–Ω")
async def shiza(ctx):
    view = ShizaView()
    await ctx.respond("–í—ã–±–µ—Ä–∏—Ç–µ –ø–µ—Å–Ω—é –¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è:", view=view)

@bot.slash_command(name="gpt", description="–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç —Å –ø–æ–º–æ—â—å—é GPT.")
async def gpt(ctx, *, prompt: str):
    client = Client()
    models = ["gpt-4o-mini", "gpt-3.5-turbo"]  # –°–ø–∏—Å–æ–∫ –º–æ–¥–µ–ª–µ–π –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä–∞
    await ctx.respond("–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞...")  # –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –Ω–∞—á–∞–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏

    loop = asyncio.get_event_loop()  # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —Ü–∏–∫–ª —Å–æ–±—ã—Ç–∏–π

    for model in models:
        try:
            # –û–±–µ—Ä—Ç–∫–∞ –¥–ª—è –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏ —Å –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏
            def create_completion():
                return client.chat.completions.create(
                    model=model,
                    messages=[{"role": "user", "content": prompt}],
                    web_search=False
                )

            # –ò—Å–ø–æ–ª—å–∑—É–µ–º run_in_executor –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
            response = await loop.run_in_executor(None, create_completion)
            await ctx.followup.send(response.choices[0].message.content)
            return  # –í—ã—Ö–æ–¥ –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏, –µ—Å–ª–∏ –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–µ–Ω
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –º–æ–¥–µ–ª–∏ {model}: {e}")  # –û—Ç–ª–∞–¥–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ

    # –ï—Å–ª–∏ –≤—Å–µ –º–æ–¥–µ–ª–∏ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∏, –ø—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ
    try:
        await ctx.followup.send("–í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å –Ω–µ—É–¥–∞—á–µ–π.")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ: {e}")  # –û—Ç–ª–∞–¥–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.run('')