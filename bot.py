import discord
from discord.ext import commands, tasks
from discord import FFmpegPCMAudio, ButtonStyle, PCMVolumeTransformer
import asyncio
import random
import datetime
from g4f.client import Client

intents = discord.Intents.default()
intents.message_content = True

bot = commands.Bot(command_prefix="!", intents=intents)

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ–º –∑–≤—É–∫–∞ –∏ —Ä–∞–¥–∏–æ
is_playing_shiza = False
voice_client = None
current_radio = None  # –î–æ–±–∞–≤–ª—è–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Ç–µ–∫—É—â–µ–π —Ä–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏–∏
# –î–æ–±–∞–≤—å—Ç–µ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è —Å–æ–æ–±—â–µ–Ω–∏—è
radio_message = None

#–ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
ADMIN_USER_ID = 480402325786329091  # –ó–∞–º–µ–Ω–∏—Ç–µ 123456789 –Ω–∞ –≤–∞—à ID
VOICE_CHANNEL_ID = 1334607111694450708  # ID –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏
TEXT_CHANNEL_ID = 1334606129015296010   # ID —Ç–µ–∫—Å—Ç–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π

# –ö–æ–º–∞–Ω–¥–∞ /radio
radio_urls = {
    '–≥–µ–ª–µ–Ω–¥–∂–∏–∫': 'https://serv39.vintera.tv/radio_gel/radio_stream/icecast.audio',
    '–∫–∞–≤–∫–∞–∑': 'http://radio.alania.net:8000/kvk',
    '–∞–Ω–∏–º–µ': 'https://pool.anison.fm:9000/AniSonFM(320)?nocache=0.9834540412142996',
    '—á–∏–ª': 'http://node-33.zeno.fm/0r0xa792kwzuv?rj-ttl=5&rj-tok=AAABfMtdjJ4AtC1pGWo1_ohFMw',
    'lofi': 'http://stream.zeno.fm/f3wvbbqmdg8uv',
    '–∫—É–±–∞–Ω—å': 'http://stream.pervoe.fm:8000',
    'jazz ': 'http://nashe1.hostingradio.ru/jazz-128.mp3'
}

# ID –∫–∞–Ω–∞–ª–∞ –¥–ª—è –æ—á–∏—Å—Ç–∫–∏
CLEAR_CHANNEL_ID = 1329025201681334272

@tasks.loop(hours=24)  # –ó–∞–¥–∞—á–∞, –≤—ã–ø–æ–ª–Ω—è—é—â–∞—è—Å—è —Ä–∞–∑ –≤ 24 —á–∞—Å–∞
async def clear_channel_daily():
    channel = bot.get_channel(CLEAR_CHANNEL_ID)

    if channel:
        deleted = await channel.purge(limit=None)  # –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è
        print(f"–£–¥–∞–ª–µ–Ω–æ {len(deleted)} —Å–æ–æ–±—â–µ–Ω–∏–π –∏–∑ –∫–∞–Ω–∞–ª–∞ {CLEAR_CHANNEL_ID}.")

@bot.event
async def on_ready():
    clear_channel_daily.start()  # –ó–∞–ø—É—Å–∫–∞–µ–º –∑–∞–¥–∞—á—É –ø—Ä–∏ —Å—Ç–∞—Ä—Ç–µ –±–æ—Ç–∞

# –ö–æ–º–∞–Ω–¥–∞ /kick
class KickView(discord.ui.View):
    @discord.ui.button(label="–°–ª—É—á–∞–π–Ω–æ–µ –∏—Å–∫–ª—é—á–µ–Ω–∏–µ", style=discord.ButtonStyle.danger)
    async def random_kick(self, button: discord.ui.Button, interaction: discord.Interaction):
        if not interaction.user.voice:
            await interaction.response.send_message("–í—ã –¥–æ–ª–∂–Ω—ã –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.", ephemeral=True)
            return

        channel = interaction.user.voice.channel
        members = [member for member in channel.members if not member.bot]

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º, —á—Ç–æ –≤ –∫–∞–Ω–∞–ª–µ —Ç–æ–ª—å–∫–æ 1 —É—á–∞—Å—Ç–Ω–∏–∫ (–≤–∫–ª—é—á–∞—è —Ç–æ–≥–æ, –∫—Ç–æ –Ω–∞–∂–∏–º–∞–µ—Ç –∫–Ω–æ–ø–∫—É)
        if len(members) > 1:
            member_to_kick = random.choice(members)
            await member_to_kick.move_to(None)
            await interaction.response.send_message(f"{member_to_kick.name} –±—ã–ª –∏—Å–∫–ª—é—á–µ–Ω –∏–∑ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞.")
        else:
            await interaction.response.send_message("–í –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å –º–∏–Ω–∏–º—É–º 2 —É—á–∞—Å—Ç–Ω–∏–∫–∞ –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è.", ephemeral=True)

@bot.slash_command(name="kick", description="–ò—Å–∫–ª—é—á–∏—Ç—å —Å–ª—É—á–∞–π–Ω–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞ –∏–∑ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞.")
async def kick(ctx):
    view = KickView()
    await ctx.respond("–ù–∞–∂–º–∏—Ç–µ, —á—Ç–æ–±—ã –∏—Å–∫–ª—é—á–∏—Ç—å —Å–ª—É—á–∞–π–Ω–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞:", view=view)

class RadioView(discord.ui.View):
    def __init__(self, radio_urls):
        super().__init__()
        self.radio_urls = radio_urls
        self.volume = 1.0
        self.is_paused = False
        self.add_radio_buttons()
        self.add_control_buttons()

    def add_radio_buttons(self):
        for name in self.radio_urls:
            button = discord.ui.Button(label=name.title(), style=ButtonStyle.primary, custom_id=f"radio_{name}")
            button.callback = self.radio_button_callback
            self.add_item(button)

    def add_control_buttons(self):
        # Stop button
        stop_button = discord.ui.Button(label="‚èπÔ∏è –°—Ç–æ–ø", style=ButtonStyle.danger, custom_id="radio_stop")
        stop_button.callback = self.stop_callback
        self.add_item(stop_button)

        # Pause/Resume button
        pause_button = discord.ui.Button(label="‚è∏Ô∏è –ü–∞—É–∑–∞", style=ButtonStyle.secondary, custom_id="radio_pause")
        pause_button.callback = self.pause_callback
        self.add_item(pause_button)

        # Volume down button
        volume_down = discord.ui.Button(label="üîâ", style=ButtonStyle.secondary, custom_id="volume_down")
        volume_down.callback = self.volume_down_callback
        self.add_item(volume_down)

        # Volume up button
        volume_up = discord.ui.Button(label="üîä", style=ButtonStyle.secondary, custom_id="volume_up")
        volume_up.callback = self.volume_up_callback
        self.add_item(volume_up)

    async def radio_button_callback(self, interaction: discord.Interaction):
        global voice_client, current_radio, radio_message
        
        station = interaction.custom_id.replace("radio_", "")
        url = self.radio_urls[station]

        if not interaction.user.voice:
            await interaction.response.send_message("–í—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!", ephemeral=True)
            return

        try:
            if voice_client and voice_client.is_connected():
                if voice_client.channel != interaction.user.voice.channel:
                    await voice_client.move_to(interaction.user.voice.channel)
                voice_client.stop()
            else:
                voice_client = await interaction.user.voice.channel.connect()

            current_radio = station
            self.is_paused = False
            audio_source = PCMVolumeTransformer(FFmpegPCMAudio(url), volume=self.volume)
            voice_client.play(audio_source)

            embed = discord.Embed(
                title="üéµ –†–∞–¥–∏–æ –ü–ª–µ–µ—Ä",
                description=f"**–°–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç:** {station.title()}\n**–ì—Ä–æ–º–∫–æ—Å—Ç—å:** {int(self.volume * 100)}%\n**–°—Ç–∞—Ç—É—Å:** –ò–≥—Ä–∞–µ—Ç",
                color=discord.Color.blue()
            )
            embed.set_image(url="https://media3.giphy.com/media/v1.Y2lkPTc5MGI3NjExcWlmbzR1M21zNTh1N3UydXQ2bjBveHIzanQ3MThtbGoxeG8ydmwxZCZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/9zExs2Q2h1EHfE4P6G/giphy.gif")

            await interaction.response.edit_message(embed=embed, view=self)

        except Exception as e:
            await interaction.response.send_message(f"–û—à–∏–±–∫–∞: {str(e)}", ephemeral=True)

    async def pause_callback(self, interaction: discord.Interaction):
        global voice_client
        
        if not voice_client or not voice_client.is_connected():
            await interaction.response.send_message("–†–∞–¥–∏–æ –Ω–µ –∏–≥—Ä–∞–µ—Ç!", ephemeral=True)
            return

        try:
            if voice_client.is_playing():
                voice_client.pause()
                self.is_paused = True
                status = "–ù–∞ –ø–∞—É–∑–µ"
                button_label = "‚ñ∂Ô∏è –ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å"
            elif voice_client.is_paused():
                voice_client.resume()
                self.is_paused = False
                status = "–ò–≥—Ä–∞–µ—Ç"
                button_label = "‚è∏Ô∏è –ü–∞—É–∑–∞"
            else:
                await interaction.response.send_message("–†–∞–¥–∏–æ –Ω–µ –∏–≥—Ä–∞–µ—Ç!", ephemeral=True)
                return

            # Update the pause button label
            for child in self.children:
                if child.custom_id == "radio_pause":
                    child.label = button_label

            embed = discord.Embed(
                title="üéµ –†–∞–¥–∏–æ –ü–ª–µ–µ—Ä",
                description=f"**–°–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç:** {current_radio.title() if current_radio else '–ù–∏—á–µ–≥–æ'}\n**–ì—Ä–æ–º–∫–æ—Å—Ç—å:** {int(self.volume * 100)}%\n**–°—Ç–∞—Ç—É—Å:** {status}",
                color=discord.Color.blue()
            )
            embed.set_image(url="https://media3.giphy.com/media/v1.Y2lkPTc5MGI3NjExcWlmbzR1M21zNTh1N3UydXQ2bjBveHIzanQ3MThtbGoxeG8ydmwxZCZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/9zExs2Q2h1EHfE4P6G/giphy.gif")
            
            await interaction.response.edit_message(embed=embed, view=self)

        except Exception as e:
            await interaction.response.send_message(f"–û—à–∏–±–∫–∞: {str(e)}", ephemeral=True)

    async def stop_callback(self, interaction: discord.Interaction):
        global voice_client, current_radio
        
        if voice_client and voice_client.is_connected():
            voice_client.stop()
            await voice_client.disconnect()
            current_radio = None
            self.is_paused = False
            
            # Reset pause button label
            for child in self.children:
                if child.custom_id == "radio_pause":
                    child.label = "‚è∏Ô∏è –ü–∞—É–∑–∞"
            
            embed = discord.Embed(
                title="üéµ –†–∞–¥–∏–æ –ü–ª–µ–µ—Ä",
                description="**–°—Ç–∞—Ç—É—Å:** –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ",
                color=discord.Color.red()
            )
            embed.set_image(url="https://media3.giphy.com/media/v1.Y2lkPTc5MGI3NjExcWlmbzR1M21zNTh1N3UydXQ2bjBveHIzanQ3MThtbGoxeG8ydmwxZCZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/9zExs2Q2h1EHfE4P6G/giphy.gif")
            
            await interaction.response.edit_message(embed=embed, view=self)
        else:
            await interaction.response.send_message("–†–∞–¥–∏–æ —É–∂–µ –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!", ephemeral=True)

    async def volume_up_callback(self, interaction: discord.Interaction):
        global voice_client
        
        if voice_client and (voice_client.is_playing() or voice_client.is_paused()):
            self.volume = min(2.0, self.volume + 0.1)
            if hasattr(voice_client.source, 'volume'):
                voice_client.source.volume = self.volume
            
            status = "–ù–∞ –ø–∞—É–∑–µ" if self.is_paused else "–ò–≥—Ä–∞–µ—Ç"
            embed = discord.Embed(
                title="üéµ –†–∞–¥–∏–æ –ü–ª–µ–µ—Ä",
                description=f"**–°–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç:** {current_radio.title() if current_radio else '–ù–∏—á–µ–≥–æ'}\n**–ì—Ä–æ–º–∫–æ—Å—Ç—å:** {int(self.volume * 100)}%\n**–°—Ç–∞—Ç—É—Å:** {status}",
                color=discord.Color.blue()
            )
            embed.set_image(url="https://media3.giphy.com/media/v1.Y2lkPTc5MGI3NjExcWlmbzR1M21zNTh1N3UydXQ2bjBveHIzanQ3MThtbGoxeG8ydmwxZCZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/9zExs2Q2h1EHfE4P6G/giphy.gif")
            
            await interaction.response.edit_message(embed=embed, view=self)
        else:
            await interaction.response.send_message("–°–Ω–∞—á–∞–ª–∞ –≤–∫–ª—é—á–∏—Ç–µ —Ä–∞–¥–∏–æ!", ephemeral=True)

    async def volume_down_callback(self, interaction: discord.Interaction):
        global voice_client
        
        if voice_client and (voice_client.is_playing() or voice_client.is_paused()):
            self.volume = max(0.0, self.volume - 0.1)
            if hasattr(voice_client.source, 'volume'):
                voice_client.source.volume = self.volume
            
            status = "–ù–∞ –ø–∞—É–∑–µ" if self.is_paused else "–ò–≥—Ä–∞–µ—Ç"
            embed = discord.Embed(
                title="üéµ –†–∞–¥–∏–æ –ü–ª–µ–µ—Ä",
                description=f"**–°–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç:** {current_radio.title() if current_radio else '–ù–∏—á–µ–≥–æ'}\n**–ì—Ä–æ–º–∫–æ—Å—Ç—å:** {int(self.volume * 100)}%\n**–°—Ç–∞—Ç—É—Å:** {status}",
                color=discord.Color.blue()
            )
            embed.set_image(url="https://media3.giphy.com/media/v1.Y2lkPTc5MGI3NjExcWlmbzR1M21zNTh1N3UydXQ2bjBveHIzanQ3MThtbGoxeG8ydmwxZCZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/9zExs2Q2h1EHfE4P6G/giphy.gif")
            
            await interaction.response.edit_message(embed=embed, view=self)
        else:
            await interaction.response.send_message("–°–Ω–∞—á–∞–ª–∞ –≤–∫–ª—é—á–∏—Ç–µ —Ä–∞–¥–∏–æ!", ephemeral=True)

@bot.slash_command(name="radio", description="–í–∫–ª—é—á–∏—Ç—å —Ä–∞–¥–∏–æ")
async def radio(ctx):
    embed = discord.Embed(
        title="üéµ –†–∞–¥–∏–æ –ü–ª–µ–µ—Ä",
        description="**–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏—é:**",
        color=discord.Color.blue()
    )
    embed.set_image(url="https://media3.giphy.com/media/v1.Y2lkPTc5MGI3NjExcWlmbzR1M21zNTh1N3UydXQ2bjBveHIzanQ3MThtbGoxeG8ydmwxZCZlcD12MV9pbnRlcm5hbF9naWZfYnlfaWQmY3Q9Zw/9zExs2Q2h1EHfE4P6G/giphy.gif")
    view = RadioView(radio_urls)
    await ctx.respond(embed=embed, view=view)

class ShizaView(discord.ui.View):
    def __init__(self):
        super().__init__()
        self.add_item(ShizaButton("üéµ –õ–∏—Ç–≤–∏–Ω", "/home/bot/litvin.mp3"))
        self.add_item(ShizaButton("üí´ –°–∏–≥–º–∞", "/home/bot/sigma.mp3"))
        self.add_item(StopShizaButton())

class ShizaButton(discord.ui.Button):
    def __init__(self, label: str, file_path: str):
        super().__init__(label=label, style=discord.ButtonStyle.primary)
        self.file_path = file_path

    async def callback(self, interaction: discord.Interaction):
        global voice_client, is_playing_shiza
        await interaction.response.defer()

        if not interaction.user.voice:
            await interaction.followup.send("–í—ã –¥–æ–ª–∂–Ω—ã –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!", ephemeral=True)
            return

        voice_client = interaction.guild.voice_client

        if voice_client is None:
            voice_client = await interaction.user.voice.channel.connect()
        elif voice_client.channel != interaction.user.voice.channel:
            await voice_client.move_to(interaction.user.voice.channel)

        if voice_client.is_playing():
            voice_client.stop()

        is_playing_shiza = True
        asyncio.create_task(play_shiza_loop(voice_client, self.file_path))

        # Create embed message
        embed = discord.Embed(
            title="üéÆ –®–∏–∑–∞ –ü–ª–µ–µ—Ä",
            description=f"**–°–µ–π—á–∞—Å –∏–≥—Ä–∞–µ—Ç:** {self.label}\n**–°—Ç–∞—Ç—É—Å:** –ò–≥—Ä–∞–µ—Ç",
            color=discord.Color.purple()
        )
        embed.set_image(url="https://i.pinimg.com/originals/c5/52/8e/c5528e6c4bb0a0ed0b7a3fcf127c68a2.gif")

        # Get the original message to edit
        message = interaction.message
        await message.edit(embed=embed, view=self.view)

class StopShizaButton(discord.ui.Button):
    def __init__(self):
        super().__init__(label="‚èπÔ∏è –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å", style=discord.ButtonStyle.danger)

    async def callback(self, interaction: discord.Interaction):
        global is_playing_shiza, voice_client

        await interaction.response.defer()

        if voice_client and voice_client.is_connected():
            is_playing_shiza = False
            voice_client.stop()
            await voice_client.disconnect()  # –î–æ–±–∞–≤–ª—è–µ–º –æ—Ç–∫–ª—é—á–µ–Ω–∏–µ –æ—Ç –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞
            
            # Create embed message for stopped state
            embed = discord.Embed(
                title="üéÆ –®–∏–∑–∞ –ü–ª–µ–µ—Ä",
                description="**–°—Ç–∞—Ç—É—Å:** –û—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ",
                color=discord.Color.red()
            )
            embed.set_image(url="https://i.pinimg.com/originals/c5/52/8e/c5528e6c4bb0a0ed0b7a3fcf127c68a2.gif")
            
            # Get the original message to edit
            message = interaction.message
            await message.edit(embed=embed, view=self.view)
        else:
            await interaction.followup.send("–°–µ–π—á–∞—Å –Ω–∏—á–µ–≥–æ –Ω–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è!", ephemeral=True)

async def play_shiza_loop(voice_client, file_path):
    global is_playing_shiza

    while is_playing_shiza and voice_client and voice_client.is_connected():
        try:
            audio_source = discord.PCMVolumeTransformer(discord.FFmpegPCMAudio(file_path), volume=1.0)
            voice_client.play(audio_source)
            
            # –ñ–¥–µ–º, –ø–æ–∫–∞ —Ç–µ–∫—É—â–µ–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –Ω–µ –∑–∞–∫–æ–Ω—á–∏—Ç—Å—è
            while voice_client.is_playing():
                await asyncio.sleep(0.1)
                if not is_playing_shiza:
                    voice_client.stop()
                    return
                    
            # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞ –ø–µ—Ä–µ–¥ —Å–ª–µ–¥—É—é—â–∏–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ–º
            await asyncio.sleep(0.5)
            
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è: {e}")
            break

@bot.slash_command(name="shiza", description="–í–∫–ª—é—á–∏—Ç—å –∑–∞—Ü–∏–∫–ª–µ–Ω–Ω–æ–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –ø–µ—Å–µ–Ω")
async def shiza(ctx):
    embed = discord.Embed(
        title="üéÆ –®–∏–∑–∞ –ü–ª–µ–µ—Ä",
        description="**–í—ã–±–µ—Ä–∏—Ç–µ —Ç—Ä–µ–∫:**",
        color=discord.Color.purple()
    )
    embed.set_image(url="https://i.pinimg.com/originals/c5/52/8e/c5528e6c4bb0a0ed0b7a3fcf127c68a2.gif")
    view = ShizaView()
    await ctx.respond(embed=embed, view=view)

@bot.slash_command(name="gpt", description="–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å —Ç–µ–∫—Å—Ç —Å –ø–æ–º–æ—â—å—é GPT.")
async def gpt(ctx, *, prompt: str):
    client = Client()
    models = ["gpt-4o"]  # –°–ø–∏—Å–æ–∫ –º–æ–¥–µ–ª–µ–π –¥–ª—è –ø–µ—Ä–µ–±–æ—Ä–∞
    await ctx.respond("–û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–ø—Ä–æ—Å–∞...")  # –£–≤–µ–¥–æ–º–ª—è–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –æ –Ω–∞—á–∞–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏

    loop = asyncio.get_event_loop()  # –ü–æ–ª—É—á–∞–µ–º —Ç–µ–∫—É—â–∏–π —Ü–∏–∫–ª —Å–æ–±—ã—Ç–∏–π

    for model in models:
        try:
            # –û–±–µ—Ä—Ç–∫–∞ –¥–ª—è –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–∏ —Å –∞—Ä–≥—É–º–µ–Ω—Ç–∞–º–∏
            def create_completion():
                return client.chat.completions.create(
                    model=model,
                    messages=[{"role": "user", "content": prompt}],
                    web_search=False
                )

            # –ò—Å–ø–æ–ª—å–∑—É–µ–º run_in_executor –¥–ª—è –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è —Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ–≥–æ –º–µ—Ç–æ–¥–∞ –≤ –æ—Ç–¥–µ–ª—å–Ω–æ–º –ø–æ—Ç–æ–∫–µ
            response = await loop.run_in_executor(None, create_completion)
            await ctx.followup.send(response.choices[0].message.content)
            return  # –í—ã—Ö–æ–¥ –∏–∑ —Ñ—É–Ω–∫—Ü–∏–∏, –µ—Å–ª–∏ –∑–∞–ø—Ä–æ—Å —É—Å–ø–µ—à–µ–Ω
        except Exception as e:
            print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–∏ –º–æ–¥–µ–ª–∏ {model}: {e}")  # –û—Ç–ª–∞–¥–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ

    # –ï—Å–ª–∏ –≤—Å–µ –º–æ–¥–µ–ª–∏ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª–∏, –ø—Ä–æ–≤–µ—Ä—è–µ–º, —Å—É—â–µ—Å—Ç–≤—É–µ—Ç –ª–∏ –≤–∑–∞–∏–º–æ–¥–µ–π—Å—Ç–≤–∏–µ
    try:
        await ctx.followup.send("–í—Å–µ –ø–æ–ø—ã—Ç–∫–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Ç–µ–∫—Å—Ç–∞ –∑–∞–≤–µ—Ä—à–∏–ª–∏—Å—å –Ω–µ—É–¥–∞—á–µ–π.")
    except Exception as e:
        print(f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –æ—Ç–ø—Ä–∞–≤–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è –æ–± –æ—à–∏–±–∫–µ: {e}")  # –û—Ç–ª–∞–¥–æ—á–Ω–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ

@bot.slash_command(name="image", description="–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è –ø–æ –∑–∞–ø—Ä–æ—Å—É")
async def image(ctx, *, prompt: str):
    await ctx.defer()  # Defer the response since image generation might take time
    
    try:
        client = Client()
        response = await client.images.async_generate(
            model="flux",
            prompt=prompt,
            response_format="url"
        )
        
        if response and hasattr(response, 'data') and len(response.data) > 0:
            image_url = response.data[0].url
            
            # Create embed with the image
            embed = discord.Embed(title="–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–Ω–æ–µ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ", description=f"–ó–∞–ø—Ä–æ—Å: {prompt}")
            embed.set_image(url=image_url)
            
            await ctx.followup.send(embed=embed)
        else:
            await ctx.followup.send("–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–π –∑–∞–ø—Ä–æ—Å.")
            
    except Exception as e:
        await ctx.followup.send(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏—è: {str(e)}")

@bot.slash_command(name="clear", description="–û—á–∏—Å—Ç–∏—Ç—å —á–∞—Ç –æ—Ç —Å–æ–æ–±—â–µ–Ω–∏–π –±–æ—Ç–∞ –∏ –∫–æ–º–∞–Ω–¥.")
async def clear(ctx):
    def is_bot_or_command_message(message):
        return message.author == bot.user or message.content.startswith('/')

    deleted = await ctx.channel.purge(limit=100, check=is_bot_or_command_message)
    await ctx.respond(f"–£–¥–∞–ª–µ–Ω–æ {len(deleted)} —Å–æ–æ–±—â–µ–Ω–∏–π.", ephemeral=True)

@bot.slash_command(name="clearall", description="–û—á–∏—Å—Ç–∏—Ç—å —á–∞—Ç –æ—Ç –≤—Å–µ—Ö —Å–æ–æ–±—â–µ–Ω–∏–π.")
async def clearall(ctx):
    if ctx.author.id != ADMIN_USER_ID:  # –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –ø—Ä–∞–≤–∞
        await ctx.respond("–£ –≤–∞—Å –Ω–µ—Ç –ø—Ä–∞–≤ –Ω–∞ –≤—ã–ø–æ–ª–Ω–µ–Ω–∏–µ —ç—Ç–æ–π –∫–æ–º–∞–Ω–¥—ã.", ephemeral=True)
        return

    deleted = await ctx.channel.purge(limit=None)  # –£–¥–∞–ª—è–µ–º –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è
    await ctx.respond(f"–£–¥–∞–ª–µ–Ω–æ {len(deleted)} —Å–æ–æ–±—â–µ–Ω–∏–π.", ephemeral=True)

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
bot.run('')