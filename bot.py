import discord
from discord.ext import commands
from discord import FFmpegPCMAudio, ButtonStyle, PCMVolumeTransformer
from discord.ui import Button, View
import random
import os
import asyncio

TOKEN = ''

# –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞
intents = discord.Intents.default()
intents.message_content = True
bot = commands.Bot(command_prefix='!', intents=intents)

# –°–ª–æ–≤–∞—Ä—å —Å —Ä–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏—è–º–∏
RADIO_STATIONS = {
    '–≥–µ–ª–µ–Ω–¥–∂–∏–∫': 'https://serv39.vintera.tv/radio_gel/radio_stream/icecast.audio',
    '–∫–∞–≤–∫–∞–∑': 'http://radio.alania.net:8000/kvk',
    '–∞–Ω–∏–º–µ': 'https://pool.anison.fm:9000/AniSonFM(320)?nocache=0.9834540412142996',
    '—á–∏–ª': 'http://node-33.zeno.fm/0r0xa792kwzuv?rj-ttl=5&rj-tok=AAABfMtdjJ4AtC1pGWo1_ohFMw',
    'lofi': 'http://stream.zeno.fm/f3wvbbqmdg8uv',
    '–∫—É–±–∞–Ω—å': 'http://stream.pervoe.fm:8000',
    'jazz ': 'http://nashe1.hostingradio.ru/jazz-128.mp3'
}

class RadioButtons(View):
    def __init__(self):
        super().__init__(timeout=None)
        for station in RADIO_STATIONS.keys():
            self.add_item(RadioButton(station))
        self.add_item(PauseButton())
        self.add_item(LeaveButton())

class RadioButton(Button):
    def __init__(self, station):
        super().__init__(label=station, style=ButtonStyle.primary)
        self.station = station
    

    async def callback(self, interaction):
        try:
            await interaction.response.defer(ephemeral=True)
            
            if not interaction.user.voice:
                await interaction.followup.send("–í—ã –¥–æ–ª–∂–Ω—ã –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!", ephemeral=True)
                return

            voice_client = interaction.guild.voice_client
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
            try:
                if voice_client and not voice_client.is_connected():
                    await voice_client.disconnect()
                    voice_client = None
            except:
                voice_client = None

            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
            if voice_client is None:
                try:
                    voice_client = await interaction.user.voice.channel.connect()
                except Exception as e:
                    await interaction.followup.send("–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∫–∞–Ω–∞–ª—É. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –µ—â–µ —Ä–∞–∑.", ephemeral=True)
                    return
            elif voice_client.channel != interaction.user.voice.channel:
                await voice_client.move_to(interaction.user.voice.channel)

            # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∏ –Ω–∞—á–∏–Ω–∞–µ–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ
            try:
                if voice_client.is_playing():
                    voice_client.stop()
                voice_client.play(FFmpegPCMAudio(RADIO_STATIONS[self.station]))
            except Exception as e:
                await interaction.followup.send("–û—à–∏–±–∫–∞ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ–ø–æ–¥–∫–ª—é—á–∏—Ç—å –±–æ—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π !leave –∏ –∑–∞—Ç–µ–º !radio", ephemeral=True)
                
        except Exception as e:
            await interaction.followup.send(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}", ephemeral=True)

class PauseButton(Button):
    def __init__(self):
        super().__init__(label="‚èØÔ∏è –ü–∞—É–∑–∞", style=ButtonStyle.secondary)
        
    async def callback(self, interaction):
        try:
            await interaction.response.defer(ephemeral=True)
            voice_client = interaction.guild.voice_client
            
            if not voice_client:
                await interaction.followup.send("–ë–æ—Ç –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!", ephemeral=True)
                return
                
            if voice_client.is_playing():
                voice_client.pause()
            elif voice_client.is_paused():
                voice_client.resume()
            else:
                await interaction.followup.send("–ù–µ—á–µ–≥–æ –ø—Ä–∏–æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—Ç—å!", ephemeral=True)
                
        except Exception as e:
            await interaction.followup.send(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}", ephemeral=True)

class LeaveButton(Button):
    def __init__(self):
        super().__init__(label="–í—ã—Ö–æ–¥", style=ButtonStyle.danger)
        
    async def callback(self, interaction):
        try:
            await interaction.response.defer(ephemeral=True)
            voice_client = interaction.guild.voice_client
            
            if voice_client:
                await voice_client.disconnect()
            else:
                await interaction.followup.send("–ë–æ—Ç –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!", ephemeral=True)
                
        except Exception as e:
            await interaction.followup.send(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}", ephemeral=True)

class KickRandomButton(Button):
    def __init__(self):
        super().__init__(label="üé≤ –ò—Å–∫–ª—é—á–∏—Ç—å —Å–ª—É—á–∞–π–Ω–æ–≥–æ", style=ButtonStyle.danger)
        
    async def callback(self, interaction):
        try:
            await interaction.response.defer(ephemeral=True)
            
            if not interaction.user.voice:
                await interaction.followup.send("–í—ã –¥–æ–ª–∂–Ω—ã –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!", ephemeral=True)
                return
                
            voice_channel = interaction.user.voice.channel
            members = voice_channel.members
            
            # –ò—Å–∫–ª—é—á–∞–µ–º –±–æ—Ç–æ–≤ –∏–∑ —Å–ø–∏—Å–∫–∞
            real_members = [m for m in members if not m.bot]
            
            if len(real_members) >= 2:
                await interaction.followup.send("–í –∫–∞–Ω–∞–ª–µ –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤!", ephemeral=True)
                return
                
            # –ò—Å–ø–æ–ª—å–∑—É–µ–º random.choice –¥–ª—è –≤—ã–±–æ—Ä–∞ —Å–ª—É—á–∞–π–Ω–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞
            victim = random.choice(real_members)
            
            try:
                await victim.move_to(None)
                await interaction.followup.send(f"üé≤ –°–ª—É—á–∞–π–Ω—ã–π –≤—ã–±–æ—Ä –ø–∞–ª –Ω–∞ {victim.display_name}!", ephemeral=False)
            except discord.Forbidden:
                await interaction.followup.send("–£ –º–µ–Ω—è –Ω–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ –ø—Ä–∞–≤ –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤!", ephemeral=True)
                
        except Exception as e:
            await interaction.followup.send(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}", ephemeral=True)

class PukButton(Button):
    def __init__(self):
        super().__init__(label="üí® –ü—É–∫–∞—Ç—å", style=ButtonStyle.primary)
        self.is_playing = False
        
    async def play_random_puk(self, voice_client):
        while self.is_playing:
            try:
                delay = random.randint(60, 120)
                await asyncio.sleep(delay)
                
                if not self.is_playing:
                    break
                
                # –°–æ—Ö—Ä–∞–Ω—è–µ–º URL —Ä–∞–¥–∏–æ
                radio_url = None
                if voice_client.is_playing():
                    try:
                        # –ë–æ–ª–µ–µ –Ω–∞–¥–µ–∂–Ω—ã–π —Å–ø–æ—Å–æ–± –ø–æ–ª—É—á–µ–Ω–∏—è URL
                        args = voice_client.source._process.args
                        for arg in args:
                            if 'http' in str(arg):
                                radio_url = arg
                                break
                        print(f"–°–æ—Ö—Ä–∞–Ω–µ–Ω URL —Ä–∞–¥–∏–æ: {radio_url}")  # –î–ª—è –æ—Ç–ª–∞–¥–∫–∏
                        voice_client.stop()
                        await asyncio.sleep(1)
                    except Exception as e:
                        print(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è —Ä–∞–¥–∏–æ: {e}")
                
                # –í–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º 5 –ø—É–∫–æ–≤
                for _ in range(5):
                    if not self.is_playing or not voice_client.is_connected():
                        break
                    
                    try:
                        # –£–≤–µ–ª–∏—á–∏–≤–∞–µ–º –≥—Ä–æ–º–∫–æ—Å—Ç—å –≤ 3 —Ä–∞–∑–∞
                        audio_source = PCMVolumeTransformer(FFmpegPCMAudio('puk.mp3'), volume=3.0)
                        voice_client.play(audio_source)
                        await asyncio.sleep(1)
                    except Exception as e:
                        print(f"–û—à–∏–±–∫–∞ –ø—É–∫–∞: {e}")
                
                # –í–æ–∑–≤—Ä–∞—â–∞–µ–º —Ä–∞–¥–∏–æ
                if radio_url:
                    try:
                        print(f"–ü–æ–ø—ã—Ç–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ —Ä–∞–¥–∏–æ: {radio_url}")  # –î–ª—è –æ—Ç–ª–∞–¥–∫–∏
                        await asyncio.sleep(1)
                        if voice_client.is_connected():
                            voice_client.play(FFmpegPCMAudio(radio_url))
                            print("–†–∞–¥–∏–æ –≤–æ–∑–æ–±–Ω–æ–≤–ª–µ–Ω–æ")  # –î–ª—è –æ—Ç–ª–∞–¥–∫–∏
                    except Exception as e:
                        print(f"–û—à–∏–±–∫–∞ –≤–æ–∑–≤—Ä–∞—Ç–∞ —Ä–∞–¥–∏–æ: {e}")
                        
            except Exception as e:
                print(f"–û—à–∏–±–∫–∞ –≤ —Ü–∏–∫–ª–µ: {e}")
                await asyncio.sleep(1)
                
        print("–¶–∏–∫–ª –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è –ø—É–∫–æ–≤ –∑–∞–≤–µ—Ä—à–µ–Ω")

    async def callback(self, interaction):
        try:
            await interaction.response.defer(ephemeral=True)
            
            if not interaction.user.voice:
                await interaction.followup.send("–í—ã –¥–æ–ª–∂–Ω—ã –Ω–∞—Ö–æ–¥–∏—Ç—å—Å—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!", ephemeral=True)
                return

            voice_client = interaction.guild.voice_client
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
            try:
                if voice_client and not voice_client.is_connected():
                    await voice_client.disconnect()
                    voice_client = None
            except:
                voice_client = None

            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤–æ–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
            if voice_client is None:
                try:
                    voice_client = await interaction.user.voice.channel.connect()
                except Exception as e:
                    await interaction.followup.send("–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∫–∞–Ω–∞–ª—É.", ephemeral=True)
                    return
            elif voice_client.channel != interaction.user.voice.channel:
                await voice_client.move_to(interaction.user.voice.channel)

            # –í–∫–ª—é—á–∞–µ–º —Ä–µ–∂–∏–º —Å–ª—É—á–∞–π–Ω–æ–≥–æ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏—è
            self.is_playing = True         
            # –ó–∞–ø—É—Å–∫–∞–µ–º –±–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª —Å–ª—É—á–∞–π–Ω—ã—Ö –ø—É–∫–æ–≤
            asyncio.create_task(self.play_random_puk(voice_client))
                
        except Exception as e:
            await interaction.followup.send(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}", ephemeral=True)

class LeaveButtonPuk(Button):
    def __init__(self, puk_button):
        super().__init__(label="–ü–µ—Ä–µ—Å—Ç–∞—Ç—å –ø—É–∫–∞—Ç—å", style=ButtonStyle.danger)
        self.puk_button = puk_button
        
    async def callback(self, interaction):
        try:
            await interaction.response.defer(ephemeral=True)
            voice_client = interaction.guild.voice_client
            
            # –°–æ—Ö—Ä–∞–Ω—è–µ–º URL —Ä–∞–¥–∏–æ –¥–æ –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –ø—É–∫–æ–≤
            radio_url = None
            if voice_client and voice_client.is_playing():
                try:
                    args = voice_client.source._process.args
                    for arg in args:
                        if 'http' in str(arg):
                            radio_url = arg
                            break
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è URL —Ä–∞–¥–∏–æ: {e}")
            
            # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Å–ª—É—á–∞–π–Ω—ã–µ –ø—É–∫–∏
            self.puk_button.is_playing = False
            
            # –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ç–µ–∫—É—â–µ–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ
            if voice_client and voice_client.is_playing():
                voice_client.stop()
            
            # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –∏ –≤–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º —Ä–∞–¥–∏–æ
            if radio_url:
                await asyncio.sleep(0.1)
                try:
                    if voice_client and voice_client.is_connected():
                        voice_client.play(FFmpegPCMAudio(radio_url))
                        print(f"–†–∞–¥–∏–æ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ: {radio_url}")
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–∞–¥–∏–æ: {e}")
                    
        except Exception as e:
            await interaction.followup.send(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞: {str(e)}", ephemeral=True)

@bot.event
async def on_ready():
    print(f'–ë–æ—Ç {bot.user} –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ!')

@bot.command(help="–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É")
async def join(ctx):
    """–ü—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É"""
    await ctx.author.voice.channel.connect()

@bot.command(help="–ü–æ–∫–∏–Ω—É—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª")
async def leave(ctx):
    """–ü–æ–∫–∏–Ω—É—Ç—å –≥–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª"""
    if ctx.voice_client:
        await ctx.guild.voice_client.disconnect()
    else:
        await ctx.send("–ë–æ—Ç –Ω–µ –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ!")

@bot.command(help="–ü–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–∞ –ø–∞—É–∑—É")
async def pause(ctx):
    """–ü–æ—Å—Ç–∞–≤–∏—Ç—å –Ω–∞ –ø–∞—É–∑—É"""
    voice_client = ctx.guild.voice_client
    if voice_client.is_playing():
        voice_client.pause()
    else:
        await ctx.send("–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–∏—á–µ–≥–æ –Ω–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è!")

@bot.command(help="–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ")
async def resume(ctx):
    """–ü—Ä–æ–¥–æ–ª–∂–∏—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ"""
    voice_client = ctx.guild.voice_client
    if voice_client.is_paused():
        voice_client.resume()
    else:
        await ctx.send("–í–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ –Ω–µ –Ω–∞ –ø–∞—É–∑–µ!")

@bot.command(help="–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ")
async def stop(ctx):
    """–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ"""
    voice_client = ctx.guild.voice_client
    if voice_client.is_playing():
        voice_client.stop()
    else:
        await ctx.send("–í –¥–∞–Ω–Ω—ã–π –º–æ–º–µ–Ω—Ç –Ω–∏—á–µ–≥–æ –Ω–µ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç—Å—è!")

@bot.command(help="–í–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ —Ä–∞–¥–∏–æ")
async def radio(ctx, station=None):
    """–í–æ—Å–ø—Ä–æ–∏–∑–≤–µ—Å—Ç–∏ —Ä–∞–¥–∏–æ"""
    if station is None:
        view = RadioButtons()
        await ctx.send('–†–∞–¥–∏–æ üéµ', view=view)
        return

    if station not in RADIO_STATIONS:
        await ctx.send('–¢–∞–∫–æ–π —Ä–∞–¥–∏–æ—Å—Ç–∞–Ω—Ü–∏–∏ –Ω–µ—Ç –≤ —Å–ø–∏—Å–∫–µ!')
        return

    try:
        voice_client = ctx.voice_client
        if voice_client is None:
            voice_client = await ctx.author.voice.channel.connect()
        elif voice_client.channel != ctx.author.voice.channel:
            await voice_client.move_to(ctx.author.voice.channel)

        if voice_client.is_playing():
            voice_client.stop()

        voice_client.play(FFmpegPCMAudio(RADIO_STATIONS[station]))
    except Exception as e:
        await ctx.send(f"–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–∏: {str(e)}")

@bot.event
async def on_voice_state_update(member, before, after):
    """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∏–∑–º–µ–Ω–µ–Ω–∏–π –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ"""
    if member == bot.user:
        if after.channel is None:  # –ë–æ—Ç –±—ã–ª –æ—Ç–∫–ª—é—á–µ–Ω
            for guild in bot.guilds:
                voice_client = guild.voice_client
                if voice_client:
                    try:
                        await voice_client.disconnect()
                    except:
                        pass
        elif before.channel != after.channel:  # –ë–æ—Ç –±—ã–ª –ø–µ—Ä–µ–º–µ—â–µ–Ω
            voice_client = member.guild.voice_client
            if voice_client and voice_client.is_playing():
                try:
                    # –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–µ–∫—É—â–∏–π –∏—Å—Ç–æ—á–Ω–∏–∫
                    current_source = voice_client.source._process.args[-1]
                    voice_client.pause()
                    await asyncio.sleep(0.5)
                    # –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ
                    voice_client.play(FFmpegPCMAudio(current_source))
                except Exception as e:
                    print(f"–û—à–∏–±–∫–∞ –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è –∞—É–¥–∏–æ –ø–æ—Å–ª–µ –ø–µ—Ä–µ–º–µ—â–µ–Ω–∏—è: {e}")

@bot.command(help="–ü–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫—É –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞")
async def kick(ctx):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫—É –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è —Å–ª—É—á–∞–π–Ω–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞"""
    view = View()
    view.add_item(KickRandomButton())
    await ctx.send("–ù–∞–∂–º–∏—Ç–µ –∫–Ω–æ–ø–∫—É, —á—Ç–æ–±—ã –∏—Å–∫–ª—é—á–∏—Ç—å —Å–ª—É—á–∞–π–Ω–æ–≥–æ —É—á–∞—Å—Ç–Ω–∏–∫–∞:", view=view)

@bot.command(help="–ü–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø—É–∫–∞")
async def puk(ctx):
    """–ü–æ–∫–∞–∑–∞—Ç—å –∫–Ω–æ–ø–∫–∏ –¥–ª—è –ø—É–∫–∞"""
    puk_button = PukButton()
    view = View()
    view.add_item(puk_button)
    view.add_item(LeaveButtonPuk(puk_button))
    await ctx.send("–°–ª—É—á–∞–π–Ω—ã–µ –ø—É–∫–∏:", view=view)

@bot.command(help="–û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª–µ")
async def clear(ctx):
    """–û—á–∏—Å—Ç–∏—Ç—å –≤—Å–µ —Å–æ–æ–±—â–µ–Ω–∏—è –±–æ—Ç–∞ –≤ –∫–∞–Ω–∞–ª–µ"""
    def is_bot_message(message):
        return message.author == bot.user

    deleted = await ctx.channel.purge(limit=100, check=is_bot_message)
    await ctx.send(f"–£–¥–∞–ª–µ–Ω–æ {len(deleted)} —Å–æ–æ–±—â–µ–Ω–∏–π –±–æ—Ç–∞.", delete_after=5)

# –ó–∞–º–µ–Ω–∏—Ç–µ 'YOUR_TOKEN' –Ω–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é TOKEN
bot.run(TOKEN)

